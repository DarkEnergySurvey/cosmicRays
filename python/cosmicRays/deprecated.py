# This file is part of lsst.utils.
#
# Developed for the LSST Data Management System.
# This product includes software developed by the LSST Project
# (https://www.lsst.org).
# See the COPYRIGHT file at the top-level directory of this distribution
# for details of code ownership.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

__all__ = ['suppress_deprecations']

import functools
import unittest.mock
import warnings

from contextlib import contextmanager

@contextmanager
def suppress_deprecations(category=FutureWarning):
    """Suppress warnings generated by `deprecated.sphinx.deprecated`.

    Naively, one might attempt to suppress these warnings by using
    `~warnings.catch_warnings`. However, `~deprecated.sphinx.deprecated`
    attempts to install its own filter, overriding that. This convenience
    method works around this and properly suppresses the warnings by providing
    a mock `~warnings.simplefilter` for `~deprecated.sphinx.deprecated` to
    call.

    Parameters
    ----------
    category : `Warning` or subclass
        The category of warning to suppress.
    """
    with warnings.catch_warnings():
        warnings.simplefilter("ignore", category)
        with unittest.mock.patch.object(warnings, "simplefilter"):
            yield
